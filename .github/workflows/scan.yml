name: SonarCloud
on:
  push:
    branches:
      - sonar

jobs:
  build:
    name: Build and analyze

    # runs-on: macOS-latest
    runs-on: macos-13

    steps:
    # - uses: swift-actions/setup-swift@v1
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: switch xcode
      run: sudo xcode-select -s '/Applications/Xcode_15.0.app/Contents/Developer'

    - name: Install sonar-scanner and build-wrapper
      uses: SonarSource/sonarcloud-github-c-cpp@v2

    - name: use cache
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          xcfs/.build
          Frameworks/ios_system/xcfs/.build
        key: ${{ runner.os }}-${{ hashFiles('get_frameworks.sh', 'xcfs/Package.swift') }}

    - name: get frameworks
      if: steps.cache.outputs.cache-hit != 'true'
      run: ./get_frameworks.sh

    - name: copy xcconfig
      run: cp template_setup.xcconfig developer_setup.xcconfig

    - name: actual build
      run: set -o pipefail && xcodebuild -project Blink.xcodeproj -scheme Blink -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPad Air (5th generation)' -configuration Debug -derivedDataPath Build/ clean build IPHONEOS_DEPLOYMENT_TARGET='16.1' CODE_SIGN_IDENTITY='' CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO ONLY_ACTIVE_ARCH=NO | tee build.log | xcpretty --report json-compilation-database -o compile_commands.json

    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner --define sonar.cfamily.compile-commands=compile_commands.json
